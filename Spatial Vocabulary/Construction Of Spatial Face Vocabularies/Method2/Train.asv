function [ histograms ] = Train( db, Q, P )
% INPUT : 
%           db n x k x 2 (n - number of images, k - number of landmarks)
%           Q number of bins
%           P is a l x 1. l is the number of features.
%               Each cell in P is a struct { list<Polygon>, property }
%               Polygon is a struct { list<LandmarkIndex }
%               property is an integer describing the propery to take from
%               the polygons (area, diameter...).

% OUTPUT : 
%           histograms is a l x t x Q x 2
%           where t = max(

[n,k,~] = size(db);

% if Q and P are not set then the function uses default values.
if (nargin < 3)
    Q = 25;
    
    [~,k,~] = size(db);
    P = 1:k;
end

% filter db according to P
l = length(P);
filteredDB = zeros(n,l,2);
for i=1:l
    filteredDB(:,i,:) = db(:,P(i),:);
end

% calculate all the chosen landmarks histograms
histograms = CalculateHistograms(filteredDB, Q);


end

